struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
};
*/

class Solution {
public:
     bool isspecial(Node*root)
    {
        if(!root->left && !root->right)return true;
        return false;
    }
    int helper(Node*root,int &ans)
    {
        if(!root)return 0;
        if(isspecial(root))return root->data;
        else
        {
            int x=helper(root->left,ans);
            int y=helper(root->right,ans);
            if(root->left && root->right)
            {
                ans=max(ans,x+y+root->data);
                return max(x,y)+root->data;
            }
            if(!root->left)return y+root->data;
            else return x+root->data;
        }
    }
    int maxPathSum(Node* root)
    {
        int ans=INT_MIN;
        int x=helper(root,ans);
        if(root->left and root->right){
            return ans;
        }
        return max(ans,x);
        // code here
    }
};
