class Solution{

	public:
	int minPoints(int M, int N, vector<vector<int>> points) 
	{ 
	    // Your code goes here
	      vector<vector<int>> dp(M, vector<int>(N, 0));
 
        // Initialize the bottom-right cell
        dp[M - 1][N - 1] = max(1, 1 - points[M - 1][N - 1]);
 
        // Fill the last column
        for (int i = M - 2; i >= 0; --i) {
            dp[i][N - 1] = max(1, dp[i + 1][N - 1] - points[i][N - 1]);
        }
 
        // Fill the last row
        for (int j = N - 2; j >= 0; --j) {
            dp[M - 1][j] = max(1, dp[M - 1][j + 1] - points[M - 1][j]);
        }
 
        // Fill the rest of the cells starting from the second-to-last row and column
        for (int i = M - 2; i >= 0; --i) {
            for (int j = N - 2; j >= 0; --j) {
                int minPointsRequired = min(dp[i + 1][j], dp[i][j + 1]);
                dp[i][j] = max(1, minPointsRequired - points[i][j]);
            }
        }
 
        return dp[0][0];
	} 
};
